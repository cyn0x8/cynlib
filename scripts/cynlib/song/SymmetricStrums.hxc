package cynlib.song;

import flixel.FlxG;

import funkin.modding.module.ModuleHandler;
import funkin.modding.module.ScriptedModule;
import funkin.play.PlayState;
import funkin.util.Constants;

/**
 * A simple helper class that makes the strumlines symmetric like in other engines.
 * Activate and deactivate this module only as necessary or it might unintentionally affect other mods.
 * 
 * Example: (see usage in `SongHelper` example)
 */
class SymmetricStrums extends ScriptedModule {
	public function new() {
		super("cynlib.song.SymmetricStrums");
	}
	
	/**
	 * The padding from the left and right edges of the screen for the opponent and player strumlines respectively.
	 */
	public var edgePadding:Float = Constants.STRUMLINE_X_OFFSET * 2;
	
	override public function onCreate(event:ScriptEvent):Void {
		active = false;
		
		bind();
		hook();
	}
	
	private function hook():Void {
		ModuleHandler.getModule("cynlib.reloader.Reloader").scriptGet("reloadPre").set("cynlib.song.SymmetricStrums", {
			callback: "onReload"
		});
	}
	
	public function onReload():Void {
		bind();
		hook();
	}
	
	private function bind():Void {
		ModuleHandler.getModule("cynlib.song.SongHelper").scriptGet("callbacks").createPersist.push(function(vars:Dynamic):Void {
			if (active) {
				PlayState.instance.opponentStrumline.x = edgePadding;
				PlayState.instance.playerStrumline.x = FlxG.width - PlayState.instance.playerStrumline.width - edgePadding;
			}
		});
	}
}