package cynlib.notekinds;

import funkin.play.PlayState;
import funkin.play.character.BaseCharacter;
import funkin.play.notes.notekind.ScriptedNoteKind;

typedef ExclusionData = {
	ignoreExclusionPref:Array<String>,
	canPlayOtherAnims:Bool
}

/**
 * A note kind that skips the singing animation for the note.
 */
class NoAnimationNote extends ScriptedNoteKind {
	public function new() {
		super("cynlib.notekinds.NoAnimationNote", "No Animation");
	}
	
	private var opponentExclusion:Null<ExclusionData> = null;
	private var playerExclusion:Null<ExclusionData> = null;
	
	override public function onNoteHit(event:HitNoteScriptEvent):Void {
		if (event.note.noteData.get_kind() != "cynlib.notekinds.NoAnimationNote") {
			if (event.note.noteData.getMustHitNote()) {
				tryClearPlayerExclusion();
			} else {
				tryClearOpponentExclusion();
			}
			
			return;
		}
		
		var targetCharacter:BaseCharacter = null;
		if (event.note.noteData.getMustHitNote()) {
			targetCharacter = PlayState.instance.currentStage.getPlayer();
			playerExclusion = {
				ignoreExclusionPref: targetCharacter.ignoreExclusionPref,
				canPlayOtherAnims: targetCharacter.canPlayOtherAnims
			};
		} else {
			targetCharacter = PlayState.instance.currentStage.getOpponent();
			opponentExclusion = {
				ignoreExclusionPref: targetCharacter.ignoreExclusionPref,
				canPlayOtherAnims: targetCharacter.canPlayOtherAnims
			};
		}
		
		targetCharacter.ignoreExclusionPref = new Array();
		targetCharacter.canPlayOtherAnims = false;
	}
	
	override public function onUpdate(event:UpdateScriptEvent):Void {
		tryClearPlayerExclusion();
		tryClearOpponentExclusion();
	}
	
	private function tryClearPlayerExclusion():Void {
		if (playerExclusion != null) {
			var targetCharacter:BaseCharacter = PlayState.instance.currentStage.getPlayer();
			
			targetCharacter.ignoreExclusionPref = playerExclusion.ignoreExclusionPref;
			if (playerExclusion.canPlayOtherAnims) {
				targetCharacter.canPlayOtherAnims = true;
			}
			
			playerExclusion = null;
		}
	}
	
	private function tryClearOpponentExclusion():Void {
		if (opponentExclusion != null) {
			var targetCharacter:BaseCharacter = PlayState.instance.currentStage.getOpponent();
			
			targetCharacter.ignoreExclusionPref = opponentExclusion.ignoreExclusionPref;
			if (opponentExclusion.canPlayOtherAnims) {
				targetCharacter.canPlayOtherAnims = true;
			}
			
			opponentExclusion = null;
		}
	}
}