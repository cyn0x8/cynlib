package cynlib.menu;

import flixel.FlxBasic;

import funkin.modding.module.ScriptedModule;

typedef MenuItem = {
	data:Null<Dynamic>,
	
	menu:Null<Dynamic>,
	container:Null<FlxBasic>,
	
	autoNavigate:Bool,
	
	enabled:Bool,
	focused:Bool,
	
	onFocus:Null<(Dynamic)->Void>,
	onUnfocus:Null<(Dynamic)->Void>,
	onDirection:Null<(Array<Bool>)->Void>,
	
	onPress:Null<()->Void>,
	onRelease:Null<()->Void>,
	
	onUpdate:Null<(Float)->Void>
}

typedef MenuItemData = {
	data:Null<Dynamic>,
	
	menu:Null<Dynamic>,
	container:Null<FlxBasic>,
	
	autoNavigate:Null<Bool>,
	
	onFocus:Null<(Dynamic)->Void>,
	onUnfocus:Null<(Dynamic)->Void>,
	onDirection:Null<(Array<Bool>)->Void>,
	
	onPress:Null<()->Void>,
	onRelease:Null<()->Void>,
	
	onUpdate:Null<(Float)->Void>
}

class MenuItem extends ScriptedModule {
	public function new() {
		super("cynlib.menu.MenuItem", -2147483648);
	}
	
	override public function onCreate(event:ScriptEvent):Void {
		active = false;
	}
	
	public function new_MenuItem(?data:MenuItemData):Menu {
		if (data == null) {
			data = {};
		}
		
		var obj:Dynamic = {
			data: data.data == null ? {} : data.data,
			
			menu: data.menu,
			container: data.container,
			
			autoNavigate: data.autoNavigate == null ? true : data.autoNavigate,
			
			enabled: false,
			focused: false,
			
			onFocus: data.onFocus == null ? function(prev:Null<Dynamic>):Void {} : data.onFocus,
			onUnfocus: data.onUnfocus == null ? function(next:Dynamic):Void {} : data.onUnfocus,
			onDirection: data.onDirection == null ? function(directions:Array<Bool>):Void {} : data.onDirection,
				
			onPress: data.onPress == null ? function():Void {} : data.onPress,
			onRelease: data.onRelease == null ? function():Void {} : data.onRelease,
				
			onUpdate: data.onUpdate == null ? function(elapsed:Float):Void {} : data.onUpdate
		};
		
		return obj;
	}
}